{"version":3,"sources":["App.js","index.js"],"names":["useSelectBar","coordPos","useState","coord","setCoord","ref","useRef","mouseDown","setMouseDown","onMouseDown","onTouchStart","ev","console","log","onTouchEnd","onTouchMove","bounds","current","getBoundingClientRect","clamp","changedTouches","clientX","left","onMouseMove","onMouseUp","style","display","hslToRGB","h","s","l","c","Math","abs","x","m","r","g","b","round","App","hueCoord","hueEventProps","hueOverlayProps","satCoord","satEventProps","satOverlayProps","lightCoord","lightEventProps","lightOverlayProps","hue","sat","light","className","id","background","onClick","fetch","method","body","JSON","stringify","color","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+OAIA,SAASA,EAAaC,GAAW,IAAD,EACFC,mBAASD,GAAY,GADnB,mBACrBE,EADqB,KACdC,EADc,KAEtBC,EAAMC,mBAFgB,EAGMJ,oBAAS,GAHf,mBAGrBK,EAHqB,KAGVC,EAHU,KA0C5B,MAAO,CAACL,EAAO,CACXE,MACAI,YA/BgB,WAChBD,GAAa,IA+BbE,aAfiB,SAAAC,GACjBC,QAAQC,IAAI,eACZD,QAAQC,IAAIF,GACZH,GAAa,KAad,CACCM,WAXe,SAAAH,GACfH,GAAa,GACbI,QAAQC,IAAI,aACZD,QAAQC,IAAIF,IASZI,YA3BgB,SAAAJ,GAChB,GAAKJ,EAAL,CAGAK,QAAQC,IAAI,cACZ,IAAMG,EAASX,EAAIY,QAAQC,wBAC3Bd,EAASe,IAAMR,EAAGS,eAAe,GAAGC,QAAUL,EAAOM,KAAM,EAAG,QAsB9DC,YA5CgB,SAAAZ,GAChB,GAAKJ,EAAL,CAGA,IAAMS,EAASX,EAAIY,QAAQC,wBAC3Bd,EAASe,IAAMR,EAAGU,QAAUL,EAAOM,KAAM,EAAG,QAwC5CE,UAjCc,WACdhB,GAAa,IAiCbiB,MAAO,CAACC,QAASnB,EAAY,eAAiB,UAItD,SAASoB,EAASC,EAAGC,EAAGC,GAEtBD,GAAK,IACLC,GAAK,IAEL,IAAIC,GAAK,EAAIC,KAAKC,IAAI,EAAIH,EAAI,IAAMD,EAChCK,EAAIH,GAAK,EAAIC,KAAKC,IAAKL,EAAI,GAAM,EAAI,IACrCO,EAAIL,EAAIC,EAAE,EACVK,EAAI,EACJC,EAAI,EACJC,EAAI,EAkBJ,OAhBI,GAAKV,GAAKA,EAAI,IAChBQ,EAAIL,EAAGM,EAAIH,EAAGI,EAAI,GACT,IAAMV,GAAKA,EAAI,KACxBQ,EAAIF,EAAGG,EAAIN,EAAGO,EAAI,GACT,KAAOV,GAAKA,EAAI,KACzBQ,EAAI,EAAGC,EAAIN,EAAGO,EAAIJ,GACT,KAAON,GAAKA,EAAI,KACzBQ,EAAI,EAAGC,EAAIH,EAAGI,EAAIP,GACT,KAAOH,GAAKA,EAAI,KACzBQ,EAAIF,EAAGG,EAAI,EAAGC,EAAIP,GACT,KAAOH,GAAKA,EAAI,MACzBQ,EAAIL,EAAGM,EAAI,EAAGC,EAAIJ,GAKb,CAHPE,EAAIJ,KAAKO,MAAgB,KAATH,EAAID,IACpBE,EAAIL,KAAKO,MAAgB,KAATF,EAAIF,IACpBG,EAAIN,KAAKO,MAAgB,KAATD,EAAIH,KA2CXK,MAtCf,WAAgB,IAAD,EAEwCxC,EAAa,GAFrD,mBAEJyC,EAFI,KAEMC,EAFN,KAEqBC,EAFrB,OAGwC3C,EAAa,KAHrD,mBAGJ4C,EAHI,KAGMC,EAHN,KAGqBC,EAHrB,OAI8C9C,EAAa,KAJ3D,mBAIJ+C,EAJI,KAIQC,EAJR,KAIyBC,EAJzB,KAMLC,EAAO,IAAMT,EAAY,IACzBU,EAAO,IAAMP,EAAY,IACzBQ,EAAS,IAAML,EAAc,IAMnC,OAAO,sBAAKM,UAAU,MAAf,UAEH,6CAAKC,GAAG,eAAeD,UAAU,aAAgBX,GAAjD,aACI,qBAAKW,UAAU,mBAAmB5B,MAAO,CAACH,KAAK,GAAD,OAAKmB,EAAL,YAC5C,uBACN,iCAAKY,UAAU,kBAAqBV,IAEpC,6CAAKW,GAAG,eAAeD,UAAU,YAAY5B,MAAO,CAChD8B,WAAW,8BAAD,OAAgCL,EAAhC,iBAA4CE,EAA5C,mBAA4DF,EAA5D,mBAA0EE,EAA1E,SACPP,GAFP,aAGI,qBAAKQ,UAAU,mBAAmB5B,MAAO,CAACH,KAAK,GAAD,OAAKsB,EAAL,YAC5C,uBACN,iCAAKS,UAAU,kBAAqBP,IACpC,6CAAKQ,GAAG,qBAAqBD,UAAU,YAAY5B,MAAO,CACtD8B,WAAW,8BAAD,OAAgCL,EAAhC,aAAwCC,EAAxC,uBAA0DD,EAA1D,aAAkEC,EAAlE,wBAAqFD,EAArF,oBACPF,GAFP,aAGI,qBAAKK,UAAU,mBAAmB5B,MAAO,CAACH,KAAK,GAAD,OAAKyB,EAAL,YAC5C,uBACN,iCAAKM,UAAU,kBAAqBJ,IACpC,qBAAKK,GAAG,UAAU7B,MAAO,CAAC8B,WAAW,OAAD,OAASL,EAAT,aAAiBC,EAAjB,cAA0BC,EAA1B,SACpC,wBAAQE,GAAG,SAASE,QAxBN,WACdC,MAAM,+BAAgC,CAACC,OAAQ,OAAQC,KAAMC,KAAKC,UAAU,CAACC,MAAOnC,EAASuB,EAAKC,EAAKC,QAuBvG,wBCxHRW,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.4297c801.chunk.js","sourcesContent":["import './App.css';\nimport {useState, useRef, useEffect} from \"react\";\nimport clamp from \"lodash/clamp\";\n\nfunction useSelectBar(coordPos) {\n    const [coord, setCoord] = useState(coordPos || 0);\n    const ref = useRef();\n    const [mouseDown, setMouseDown] = useState(false);\n\n    const onMouseMove = ev => {\n        if (!mouseDown) {\n            return\n        }\n        const bounds = ref.current.getBoundingClientRect();\n        setCoord(clamp(ev.clientX - bounds.left, 0, 500));\n    };\n\n    const onMouseDown = () => {\n        setMouseDown(true);\n    };\n\n    const onMouseUp = () => {\n        setMouseDown(false);\n    }\n\n    const onTouchMove = ev => {\n        if (!mouseDown) {\n            return\n        }\n        console.log(\"touch move\");\n        const bounds = ref.current.getBoundingClientRect();\n        setCoord(clamp(ev.changedTouches[0].clientX - bounds.left, 0, 500));\n    };\n\n    const onTouchStart = ev => {\n        console.log(\"touch start\");\n        console.log(ev)\n        setMouseDown(true);\n    }\n\n    const onTouchEnd = ev => {\n        setMouseDown(false);\n        console.log(\"touch end\");\n        console.log(ev);\n    }\n\n    return [coord, {\n        ref,\n        onMouseDown,\n        onTouchStart,\n    }, {\n        onTouchEnd,\n        onTouchMove,\n        onMouseMove,\n        onMouseUp,\n        style: {display: mouseDown ? 'inline-block' : 'none'}\n    }];\n}\n\nfunction hslToRGB(h, s, l) {\n    // Must be fractions of 1\n  s /= 100;\n  l /= 100;\n\n  let c = (1 - Math.abs(2 * l - 1)) * s,\n      x = c * (1 - Math.abs((h / 60) % 2 - 1)),\n      m = l - c/2,\n      r = 0,\n      g = 0,\n      b = 0;\n    \n      if (0 <= h && h < 60) {\n        r = c; g = x; b = 0;  \n      } else if (60 <= h && h < 120) {\n        r = x; g = c; b = 0;\n      } else if (120 <= h && h < 180) {\n        r = 0; g = c; b = x;\n      } else if (180 <= h && h < 240) {\n        r = 0; g = x; b = c;\n      } else if (240 <= h && h < 300) {\n        r = x; g = 0; b = c;\n      } else if (300 <= h && h < 360) {\n        r = c; g = 0; b = x;\n      }\n      r = Math.round((r + m) * 255);\n      g = Math.round((g + m) * 255);\n      b = Math.round((b + m) * 255);\n      return [r, g, b];\n    \n}\n\nfunction App() {\n\n    const [hueCoord, hueEventProps, hueOverlayProps] = useSelectBar(0);\n    const [satCoord, satEventProps, satOverlayProps] = useSelectBar(500);\n    const [lightCoord, lightEventProps, lightOverlayProps] = useSelectBar(250);\n\n    const hue = (360 * hueCoord) / 500;\n    const sat = (100 * satCoord) / 500;\n    const light = (100 * lightCoord) / 500;\n\n    const sendColor = () => {\n        fetch(\"http://192.168.2.3:5000/set/\", {method: \"post\", body: JSON.stringify({color: hslToRGB(hue, sat, light)})});\n    };\n\n    return <div className=\"App\">\n\n        <div id=\"hsl-gradient\" className=\"color-bar\" {...hueEventProps}>\n            <div className=\"color-bar-select\" style={{left: `${hueCoord}px`}}/>\n        </div><br/>\n        <div className=\"secret-overlay\" {...hueOverlayProps} />\n\n        <div id=\"sat-gradient\" className=\"color-bar\" style={{\n            background: `linear-gradient(90deg, hsl(${hue}, 0%, ${light}%), hsl(${hue}, 100%, ${light}%))`\n        }} {...satEventProps}>\n            <div className=\"color-bar-select\" style={{left: `${satCoord}px`}}/>\n        </div><br/>\n        <div className=\"secret-overlay\" {...satOverlayProps}/>\n        <div id=\"lightness-gradient\" className=\"color-bar\" style={{\n            background: `linear-gradient(90deg, hsl(${hue}, ${sat}%, 0%), hsl(${hue}, ${sat}%, 50%), hsl(${hue}, 100%, 100%))`\n        }} {...lightEventProps}>\n            <div className=\"color-bar-select\" style={{left: `${lightCoord}px`}}/>\n        </div><br/>\n        <div className=\"secret-overlay\" {...lightOverlayProps}/>\n        <div id=\"preview\" style={{background: `hsl(${hue}, ${sat}%, ${light}%)`}}/>\n        <button id=\"submit\" onClick={sendColor}>Submit</button>\n    </div>;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}